// Generated by CoffeeScript 1.9.3
(function() {
  var agreement, book, card, credit, editUser, exam, hnust, judge, lastUser, login, main, schedule, score, tuition;

  hnust = angular.module('hnust', ['ngRoute', 'ngCookies']);

  hnust.config(function($routeProvider) {
    return $routeProvider.when('/login', {
      controller: login,
      templateUrl: 'views/login.html'
    }).when('/agreement', {
      controller: agreement,
      templateUrl: 'views/agreement.html'
    }).when('/score', {
      controller: score,
      templateUrl: 'views/score.html'
    }).when('/schedule', {
      controller: schedule,
      templateUrl: 'views/schedule.html'
    }).when('/exam', {
      controller: exam,
      templateUrl: 'views/exam.html'
    }).when('/credit', {
      controller: credit,
      templateUrl: 'views/credit.html'
    }).when('/tuition', {
      controller: tuition,
      templateUrl: 'views/tuition.html'
    }).when('/judge', {
      controller: judge,
      templateUrl: 'views/judge.html'
    }).when('/book', {
      controller: book,
      templateUrl: 'views/book.html'
    }).when('/card', {
      controller: card,
      templateUrl: 'views/card.html'
    }).when('/editUser', {
      controller: editUser,
      templateUrl: 'views/editUser.html'
    }).when('/lastUser', {
      controller: lastUser,
      templateUrl: 'views/lastUser.html'
    }).otherwise({
      redirectTo: '/score'
    });
  });

  main = function($scope, $rootScope, $http, $location, $cookies) {
    $('#sidebar').sidebar('attach events', '#menu');
    $rootScope.url = 'http://a.hnust.sinaapp.com/index.php';
    $scope.$watch(function() {
      return [$cookies, $location.url()];
    }, function() {
      $rootScope.hideNav = navigator.userAgent === 'demo';
      $rootScope.params = $location.search();
      $rootScope.rank = $cookies.rank || '-1';
      return $rootScope.studentId = $cookies.studentId || '游客';
    }, true);
    $rootScope.msg = function(msg) {
      return layer.msg(msg);
    };
    $rootScope.checkData = function(data) {
      switch (data.code) {
        case -1:
          $rootScope.error = data.msg || '网络连接超时 OR 服务器错误。';
          break;
        case 1:
          $rootScope.msg(data.msg);
          break;
        case 2:
          $rootScope.msg(data.msg);
          window.history.back();
          break;
        case 3:
          $cookies.rank = $cookies.studentId = '';
          $cookies.referer = $location.url();
          $location.url('/login');
          break;
        case 4:
          if ($cookies.referer && $cookies.referer !== '/login') {
            $location.url($cookies.referer);
            $cookies.referer = '';
          } else {
            $location.url('/score');
          }
          return true;
        case 5:
          $rootScope.error = data.msg;
          break;
        default:
          return true;
      }
      return false;
    };
    return $rootScope.jsonp = function(params, timeout, callback) {
      $('#sidebar').sidebar('hide');
      $rootScope.error = '';
      params || (params = {});
      params.callback = 'JSON_CALLBACK';
      timeout || (timeout = 8000);
      $rootScope.loading = true;
      return $http.jsonp($rootScope.url, {
        params: params,
        timeout: timeout
      }).success(function(response) {
        $rootScope.loading = false;
        response.code = parseInt(response != null ? response.code : void 0);
        if ($rootScope.checkData(response)) {
          if (response.code === 6) {
            params.passwd = prompt(response.msg, '');
            if (params.passwd) {
              return $rootScope.jsonp(params, timeout, callback);
            } else {
              return $rootScope.error = '密码错误！';
            }
          } else if (callback != null) {
            return callback(response);
          }
        }
      }).error(function() {
        $rootScope.loading = false;
        return $rootScope.checkData({
          'code': '-1'
        });
      });
    };
  };

  login = function($scope, $rootScope, $cookies) {
    $('#sidebar').sidebar('hide');
    $('.ui.checkbox').checkbox();
    if (($cookies != null ? $cookies.rank : void 0) > '-1') {
      return $rootScope.checkData({
        code: 4
      });
    }
    $rootScope.fun = 'login';
    $rootScope.title = '用户登录';
    $scope.studentId = $scope.passwd = '';
    return $('.ui.form').form({
      studentId: {
        identifier: 'studentId',
        rules: [
          {
            type: 'empty',
            prompt: '学号不能为空！'
          }, {
            type: 'length[10]',
            prompt: '学号不能少于10位！'
          }, {
            type: 'maxLength[10]',
            prompt: '学号不能大于10位！'
          }
        ]
      },
      passwd: {
        identifier: 'passwd',
        rules: [
          {
            type: 'empty',
            prompt: '密码不能为空！'
          }
        ]
      },
      agreement: {
        identifier: 'agreement',
        rules: [
          {
            type: 'checked',
            prompt: '同意用户使用协议方可使用！'
          }
        ]
      }
    }, {
      inline: true,
      on: 'blur',
      onSuccess: function() {
        var params;
        params = {
          fun: 'login',
          passwd: $scope.passwd,
          studentId: $scope.studentId
        };
        return $rootScope.jsonp(params, 8000, function(data) {
          var ref, ref1;
          $cookies.rank = (data != null ? (ref = data.info) != null ? ref.rank : void 0 : void 0) || '-1';
          return $cookies.studentId = (data != null ? (ref1 = data.info) != null ? ref1.studentId : void 0 : void 0) || '游客';
        });
      }
    });
  };

  agreement = function($scope, $rootScope) {
    $rootScope.title = '用户使用协议';
    return $rootScope.params.fun = 'agreement';
  };

  score = function($scope, $rootScope) {
    $rootScope.title = '成绩查询';
    $rootScope.params.fun = 'score';
    return $rootScope.jsonp($rootScope.params, 10000, function(data) {
      var k, v;
      $scope.data = data.data;
      return $scope.terms = ((function() {
        var ref, results;
        ref = $scope.data;
        results = [];
        for (k in ref) {
          v = ref[k];
          results.push(k);
        }
        return results;
      })()).reverse();
    });
  };

  schedule = function($scope, $rootScope) {
    $rootScope.title = '实时课表';
    $rootScope.params.fun = 'schedule';
    return $rootScope.jsonp($rootScope.params, 15000, function(data) {
      $scope.data = data.data;
      $scope.info = data.info;
      return $('.menu .item').tab();
    });
  };

  exam = function($scope, $rootScope) {
    $rootScope.title = '考试安排';
    $rootScope.params.fun = 'exam';
    return $rootScope.jsonp($rootScope.params, 15000, function(data) {
      return $scope.data = data.data;
    });
  };

  credit = function($scope, $rootScope) {
    $rootScope.title = '学分绩点';
    $rootScope.params.fun = 'credit';
    return $rootScope.jsonp($rootScope.params, 15000, function(data) {
      return $scope.data = data.data;
    });
  };

  tuition = function($scope, $rootScope) {
    $rootScope.title = '学年学费';
    $rootScope.params.fun = 'tuition';
    return $rootScope.jsonp($rootScope.params, 15000, function(data) {
      return $scope.total = data.data[0];
    });
  };

  judge = function($scope, $rootScope) {
    $rootScope.title = '教学评价';
    $rootScope.params.fun = 'judge';
    $rootScope.jsonp($rootScope.params, 15000, function(data) {
      return $scope.data = data.data;
    });
    $scope.judge = function(item) {
      $('.ui.checkbox').checkbox();
      $('.ui.form').form('clear');
      return $scope.judging = item;
    };
    return $scope.submit = function() {
      var data, flag, i, j, params;
      $rootScope.error = '';
      data = {
        params: $scope.judging.params
      };
      flag = true;
      for (i = j = 0; j < 10; i = ++j) {
        data["a" + i] = $("input[name='a" + i + "']:checked").val();
        if (!data["a" + i]) {
          $rootScope.error = '请确定表单已填写完整。';
          return false;
        }
        if (i !== 0 && data["a" + i] !== data["a" + (i - 1)]) {
          flag = false;
        }
      }
      if (flag) {
        $rootScope.error = '不能全部选择相同的选项。';
        return false;
      }
      params = {
        fun: 'judge',
        data: angular.toJson(data)
      };
      return $rootScope.jsonp(params, 15000, function(data) {
        if (data.code === 0) {
          $scope.judging = false;
          return $scope.data = data.data;
        }
      });
    };
  };

  book = function($scope, $rootScope) {
    $rootScope.title = '图书续借';
    $rootScope.params.fun = 'book';
    $rootScope.jsonp($rootScope.params, 8000, function(data) {
      return $scope.data = data.data;
    });
    return $scope.renew = function(params) {
      params.fun = 'book';
      return $rootScope.jsonp(params, 8000, function(data) {
        return $scope.data = data.data;
      });
    };
  };

  card = function($scope, $rootScope) {
    $rootScope.title = '校园一卡通';
    $rootScope.params.fun = 'card';
    return $rootScope.jsonp($rootScope.params, 15000, function(data) {
      $scope.info = data.info;
      return $scope.data = data.data;
    });
  };

  editUser = function($scope, $rootScope, $location, $cookies) {
    $('#sidebar').sidebar('hide');
    if (($cookies != null ? $cookies.rank : void 0) === '-1') {
      return $location.url('/login');
    }
    $rootScope.error = '';
    $rootScope.title = '修改权限';
    $rootScope.params.fun = 'editUser';
    $scope.studentId = '';
    $('.ui.dropdown').dropdown();
    return $('.ui.form').form({
      studentId: {
        identifier: 'studentId',
        rules: [
          {
            type: 'empty',
            prompt: '学号不能为空！'
          }, {
            type: 'length[10]',
            prompt: '学号不能少于10位！'
          }, {
            type: 'maxLength[10]',
            prompt: '学号不能大于10位！'
          }
        ]
      },
      rank: {
        identifier: 'rank',
        rules: [
          {
            type: 'empty',
            prompt: '权限不能为空！'
          }
        ]
      }
    }, {
      inline: true,
      on: 'blur',
      onSuccess: function() {
        var params;
        params = {
          fun: 'editUser',
          studentId: $scope.studentId,
          rank: $("select[name='rank']").val()
        };
        $rootScope.jsonp(params);
        return false;
      }
    });
  };

  lastUser = function($scope, $rootScope) {
    $rootScope.title = '最近使用用户';
    $rootScope.params.fun = 'lastUser';
    return $rootScope.jsonp($rootScope.params, 8000, function(data) {
      return $scope.data = data.data;
    });
  };

  hnust.controller('main', main);

  hnust.controller('login', login);

  hnust.controller('score', score);

  hnust.controller('schedule', schedule);

  hnust.controller('exam', exam);

  hnust.controller('credit', credit);

  hnust.controller('tuition', tuition);

  hnust.controller('judge', judge);

  hnust.controller('book', book);

  hnust.controller('card', card);

  hnust.controller('editUser', editUser);

  hnust.controller('lastUser', lastUser);

}).call(this);
