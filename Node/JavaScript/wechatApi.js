// Generated by CoffeeScript 1.10.0
var APISDK, agentid, apisdk, config, corpId, logger, partyid, secret;

APISDK = require('wechat-enterprise').API;

config = require('./config');

logger = config.logger;

corpId = config.wechat.corpId;

secret = config.wechat.secret;

agentid = config.wechat.agentid;

partyid = config.wechat.partyid;

apisdk = new APISDK(corpId, secret, agentid);

module.exports = function(req, res) {
  var body, callback, errFormat, ref;
  body = req.body;
  errFormat = function(errmsg) {
    return {
      errcode: -1,
      errmsg: errmsg
    };
  };
  if (body.secret !== secret) {
    return res.send(errFormat('Secret Error'));
  }
  callback = function(err, result) {
    if (err) {
      result = errFormat(err);
      logger.error(err);
    }
    return res.send(result);
  };
  switch (req.params.apiName) {
    case 'getUser':
      logger.info("请求用户" + body.uid + "的信息");
      return apisdk.getUser(body.uid, callback);
    case 'createUser':
    case 'updateUser':
      body.user || (body.user = {});
      body.user.department = partyid;
      logger.info("创建用户" + ((ref = body.user) != null ? ref.userid : void 0));
      return apisdk.createUser(body.user, function(err, result) {
        var ref1;
        if (err && err.code === 60102) {
          logger.info("用户" + ((ref1 = body.user) != null ? ref1.userid : void 0) + "已存在，更新用户数据");
          return apisdk.updateUser(body.user, callback);
        } else {
          return callback(err, result);
        }
      });
    case 'deleteUser':
      logger.info("删除用户" + body.uid);
      return apisdk.deleteUser(body.uid, callback);
    case 'sendMsg':
      logger.info("主动发消息给", body.to);
      return apisdk.send(body.to, body.message, callback);
    default:
      return res.send(errFormat('未找到相关API'));
  }
};
